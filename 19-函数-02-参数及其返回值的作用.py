# 函数的参数作⽤
# 思考：完成需求如下：⼀个函数完成两个数1和2的加法运算，如何书写程序？


# 定义函数
def add_num1():
    result = 1 + 2
    print(result)


# 调⽤函数
add_num1()
"""
    思考：上述add_num1函数只能完成数字1和2的加法运算，如果想要这个函数变得更灵活，可以计算任
何⽤户指定的两个数字的和，如何书写程序？
    分析：⽤户要在调⽤函数的时候指定具体数字，那么在定义函数的时候就需要接收⽤户指定的数字。函
数调⽤时候指定的数字和定义函数时候接收的数字即是函数的参数。"""


# 定义函数时同时定义了接收⽤户数据的参数a和b，a和b是形参
def add_num2(a, b):
    result = a + b
    print(result)


# 调⽤函数时传⼊了真实的数据10 和 20，真实数据为实参
add_num2(10, 20)


print('请输入两个数来求他们的和')
i, j = map(int, input('您想求和的数是：').split())
print(f'i={i},j={j}')
add_num2(i, j)
print(f'这两个数的和是{add_num2(i, j)}')
"""
map()函数接收两个参数，一个是函数，一个是序列，map将传入的函数依次作用到序列的每个元素，并把结果作为新的list返回。
split()它主要是切割字符串，结果返回由字符串元素组成的一个列表，拆分字符串。通过指定分隔符对字符串进行切片，并返回分割后的字符串列表（list）
map(function,input(“以空格分开”).split())
由于input( )输出的是用空格分开的字符串，split( )会分割开各个值并放到列表中，此时在列表中的值是字符串
如果要用于运算必须在map( )中利用int( )或者float( )等处理，再赋值。如果需要赋值的值都是字符串的话就没必要用map函数了。
a,b =input('输入a,b空格隔开:').split()
#此时a,b为str型
a,b =map(int,input('输入a,b空格隔开:').split())
#此时a,b为int型
"""


# 函数的返回值作⽤
# 例如：我们去超市购物，⽐如买烟，给钱之后，是不是售货员会返回给我们烟这个商品，在函数中，如果需要返回结果给⽤户需要使⽤函数返回值。
def buy():
    return '烟'


# 使⽤变量保存函数返回值
goods = buy()
print(goods)


# 需求：制作⼀个计算器，计算任意两数字之和，并保存结果。
def sum_num(a, b):
    return a + b


# ⽤result变量保存函数返回值
result = sum_num(1, 2)
print(result)
